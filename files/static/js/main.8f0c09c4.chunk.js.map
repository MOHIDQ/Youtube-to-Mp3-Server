{"version":3,"sources":["App.js","index.js"],"names":["App","convert","state","buttonState","fetch","youtubeURL","urlState","then","response","json","console","log","setState","title","imgURL","thumbnail_url","catch","error","buttonDisbale","progressState","youtubeID","getParamName","apiURL","method","window","open","url","clear","param","replace","results","RegExp","exec","decodeURIComponent","className","this","placeholder","value","onChange","text","target","disabled","onClick","style","display","Spinner","animation","role","size","src","alt","Component","ReactDOM","render","document","getElementById"],"mappings":"8NAgGeA,E,kDA7Fb,aAAe,IAAD,8BACZ,gBAQFC,QAAU,WACR,GAA+B,eAA3B,EAAKC,MAAMC,YACbC,MAAM,EAAKC,WAAW,EAAKH,MAAMI,UAC9BC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GAED,UAAWA,IACbC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CAACC,MAAOJ,EAAKI,MAAOV,YAAa,WAAYW,OAAQL,EAAKM,gBACxEL,QAAQC,IAAI,EAAKT,WAGpBc,OAAM,SAACC,GACNP,QAAQO,MAAMA,UAIf,CACH,EAAKL,SAAS,CAACM,eAAe,EAAMC,cAAe,UACnD,IAAIC,EAAY,EAAKC,aAAa,IAAK,EAAKnB,MAAMI,UAClDF,MAAM,EAAKkB,OAAOF,EAAW,CAACG,OAAQ,OAAQ,eAAiB,qBAC5DhB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GACHC,QAAQC,IAAIF,GACZe,OAAOC,KAAKhB,EAAKiB,KACjB,EAAKd,SAAS,CAACM,eAAe,EAAOC,cAAe,YAIvDH,OAAM,SAACC,GACNP,QAAQO,MAAMA,QAvCR,EA+CdU,MAAQ,WACN,EAAKf,SAAS,CAACT,YAAa,aAAcG,SAAU,GAAIQ,OAAQ,GAAID,MAAO,MAhD/D,EAoDdQ,aAAe,SAACO,EAAOF,GACrBE,EAAQA,EAAMC,QAAQ,UAAW,QACjC,IACIC,EADQ,IAAIC,OAAO,OAASH,EAAQ,qBACpBI,KAAKN,GACzB,OAAKI,EACAA,EAAQ,GACNG,mBAAmBH,EAAQ,GAAGD,QAAQ,MAAO,MAD5B,GADH,MAtDrB,EAAK3B,MAAS,CAACC,YAAa,aAAce,eAAe,EAAOZ,SAAU,GAAIQ,OAAQ,GAAID,MAAO,GACnFM,cAAe,QAC7B,EAAKd,WAAa,iCAClB,EAAKiB,OAAS,qCALF,E,0CA6Dd,WAAU,IAAD,OACP,OACE,gCACE,sBAAKY,UAAU,wBAAf,UACE,0DACA,uKAGF,6BAAKC,KAAKjC,MAAMW,QAChB,sBAAKqB,UAAU,UAAf,UACE,uBAAOA,UAAU,eAAeE,YAAY,oBAAoBC,MAASF,KAAKjC,MAAMI,SAAUgC,SAAU,SAACC,GAAU,EAAK3B,SAAS,CAACN,SAAUiC,EAAKC,OAAOH,WACxJ,gCACE,wBAAQH,UAAU,0BAA0BO,SAAUN,KAAKjC,MAAMgB,cAAewB,QAASP,KAAKlC,QAA9F,SAAwGkC,KAAKjC,MAAMC,cACnH,wBAAQ+B,UAAU,yBAAyBO,SAAUN,KAAKjC,MAAMgB,cAAewB,QAASP,KAAKR,MAA7F,sBAGF,sBAAKgB,MAAO,CAACC,QAAST,KAAKjC,MAAMiB,eAAjC,UACE,cAAC0B,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SAASC,KAAK,KAA/C,SACE,sBAAMd,UAAU,UAAhB,uBAFJ,oBAMA,qBAAKe,IAAKd,KAAKjC,MAAMY,OAAQoC,IAAKf,KAAKjC,MAAMW,kB,GApFrCsC,a,MCIlBC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.8f0c09c4.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Spinner from 'react-bootstrap/Spinner'\nclass App extends Component {\n  constructor() {\n    super();\n    this.state =  {buttonState: \"Find Video\", buttonDisbale: false, urlState: \"\", imgURL: \"\", title: \"\",\n                  progressState: \"None\"}\n    this.youtubeURL = \"https://noembed.com/embed?url=\"\n    this.apiURL = \"http://3.138.182.226:8080/convert/\"\n  }\n\n  //function for finding and converting video\n  convert = () => {\n    if (this.state.buttonState === \"Find Video\") {\n      fetch(this.youtubeURL+this.state.urlState)\n        .then((response) => response.json())\n        .then((json) => {\n          //checks if property is there, meaning the youtube video was found\n          if (\"title\" in json) {\n            console.log(json)\n            this.setState({title: json.title, buttonState: \"Download\", imgURL: json.thumbnail_url})\n            console.log(this.state)\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n    //when downloading\n    else {\n      this.setState({buttonDisbale: true, progressState: \"Block\"})\n      let youtubeID = this.getParamName(\"v\", this.state.urlState)\n      fetch(this.apiURL+youtubeID, {method: \"POST\", 'Content-Type':  'application/json'})\n        .then((response) => response.json())\n        .then((json) => {\n            console.log(json)\n            window.open(json.url)\n            this.setState({buttonDisbale: false, progressState: \"None\"})\n            //this.setState({title: json.title, buttonState: \"Download\", imgURL: json.thumbnail_url})\n            //console.log(this.state)\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      //console.log(this.state) \n      //this.setState({buttonState: \"Find Video\"})\n    }\n  }\n\n  //clear states\n  clear = () => {\n    this.setState({buttonState: \"Find Video\", urlState: \"\", imgURL: \"\", title: \"\"})\n  }\n\n  //returns the query param of the url\n  getParamName = (param, url) => {\n    param = param.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + param + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n\n  render() {\n    return(\n      <div> \n        <div className=\"jumbotron text-center\">\n          <h1>Youtube to MP3 Converter</h1>\n          <p>Simply enter the Youtube link you want to download, before confiming the download\n            the thumbnail and title will appear of the video.</p> \n        </div>\n        <h3>{this.state.title}</h3>\n        <div className=\"mainDiv\">\n          <input className=\"form-control\" placeholder=\"Enter Youtube URL\" value = {this.state.urlState} onChange={(text) => {this.setState({urlState: text.target.value})}}></input>\n          <div>\n            <button className=\"btn btn-outline-success\" disabled={this.state.buttonDisbale} onClick={this.convert}>{this.state.buttonState}</button>\n            <button className=\"btn btn-outline-danger\" disabled={this.state.buttonDisbale} onClick={this.clear}>Clear</button>\n            \n          </div>\n          <div style={{display: this.state.progressState}}>\n            <Spinner animation=\"border\" role=\"status\" size=\"sm\">\n              <span className=\"sr-only\">Loading</span>\n            </Spinner>\n            Downloading...\n          </div>\n          <img src={this.state.imgURL} alt={this.state.title}></img>\n        </div>\n\n      </div>\n\n\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}